import React, { Suspense, useContext, useEffect, useState } from "react";
import { BrowserRouter as Router, Routes, Route, Navigate } from "react-router-dom";
import Navbar from "./components/Navbar";
import Sidebar from "./components/Sidebar";
import { AuthContext, AuthProvider } from "./context/AuthContext";
import { ThemeProvider } from "./context/ThemeContext";
import Loader from "./components/Loader";
import { registerSW } from "./serviceWorker";
import { trackPageView } from "./utils/analytics";

const Home = React.lazy(() => import("./pages/Home"));
const Nichos = React.lazy(() => import("./pages/Nichos"));
const Templates = React.lazy(() => import("./pages/Templates"));
const Configuracoes = React.lazy(() => import("./pages/Configuracoes"));
const Login = React.lazy(() => import("./pages/Login"));

const ProtectedRoute = ({ children }) => {
    const { user } = useContext(AuthContext);
    return user ? children : <Navigate to="/login" />;
};

const App = () => {
    const { user, refreshSession } = useContext(AuthContext);
    const [darkMode, setDarkMode] = useState(() => {
        return localStorage.getItem("darkMode") === "true";
    });

    useEffect(() => {
        localStorage.setItem("darkMode", darkMode);
        refreshSession();  // ðŸ”„ Garante persistÃªncia de sessÃ£o ao recarregar a pÃ¡gina
        registerSW();  // ðŸš€ Registra o Service Worker para o modo offline
    }, [darkMode]);

    useEffect(() => {
        trackPageView();  // ðŸ“Š Rastreia visitas em cada pÃ¡gina
    }, []);

    return (
        <ThemeProvider value={{ darkMode, setDarkMode }}>
            <AuthProvider>
                <Router>
                    {user && <Navbar aria-label="Barra de navegaÃ§Ã£o" />}
                    <div className="app-container" role="main">
                        {user && <Sidebar aria-label="Menu lateral" />}
                        <div className="content">
                            <Suspense fallback={<Loader />}>
                                <Routes>
                                    <Route path="/" element={<Home />} />
                                    <Route path="/login" element={<Login />} />
                                    <Route path="/nichos" element={<ProtectedRoute><Nichos /></ProtectedRoute>} />
                                    <Route path="/templates" element={<ProtectedRoute><Templates /></ProtectedRoute>} />
                                    <Route path="/configuracoes" element={<ProtectedRoute><Configuracoes /></ProtectedRoute>} />
                                    <Route path="*" element={<Navigate to="/" />} />
                                </Routes>
                            </Suspense>
                        </div>
                    </div>
                </Router>
            </AuthProvider>
        </ThemeProvider>
    );
};

export default App;
